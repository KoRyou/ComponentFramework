// Generated by the protocol buffer compiler.  DO NOT EDIT!

package zgl.com.cn.model_hotel.hotel_bean;

import zgl.com.cn.libandroid.net.network.bean.ParcelableMessageNano;
import zgl.com.cn.libandroid.net.network.bean.ParcelableMessageNanoCreator;

@SuppressWarnings("hiding")
public final class MoMobileCityGroup extends
        ParcelableMessageNano {

  // Used by Parcelable
  @SuppressWarnings({"unused"})
  public static final android.os.Parcelable.Creator<MoMobileCityGroup> CREATOR =
      new ParcelableMessageNanoCreator<
                MoMobileCityGroup>(MoMobileCityGroup.class);

  private static volatile MoMobileCityGroup[] _emptyArray;
  public static MoMobileCityGroup[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new MoMobileCityGroup[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional string GroupName = 1;
  public String groupName;

  // repeated .MoMobileCity ListMobileCity = 2;
  public MoMobileCity[] listMobileCity;

  // optional int32 OftenCity = 3 [default = 0];
  public int oftenCity;

  public MoMobileCityGroup() {
    clear();
  }

  public MoMobileCityGroup clear() {
    groupName = "";
    listMobileCity = MoMobileCity.emptyArray();
    oftenCity = 0;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (!this.groupName.equals("")) {
      output.writeString(1, this.groupName);
    }
    if (this.listMobileCity != null && this.listMobileCity.length > 0) {
      for (int i = 0; i < this.listMobileCity.length; i++) {
        MoMobileCity element = this.listMobileCity[i];
        if (element != null) {
          output.writeMessage(2, element);
        }
      }
    }
    if (this.oftenCity != 0) {
      output.writeInt32(3, this.oftenCity);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (!this.groupName.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.groupName);
    }
    if (this.listMobileCity != null && this.listMobileCity.length > 0) {
      for (int i = 0; i < this.listMobileCity.length; i++) {
        MoMobileCity element = this.listMobileCity[i];
        if (element != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(2, element);
        }
      }
    }
    if (this.oftenCity != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.oftenCity);
    }
    return size;
  }

  @Override
  public MoMobileCityGroup mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 10: {
          this.groupName = input.readString();
          break;
        }
        case 18: {
          int arrayLength = com.google.protobuf.nano.WireFormatNano
              .getRepeatedFieldArrayLength(input, 18);
          int i = this.listMobileCity == null ? 0 : this.listMobileCity.length;
          MoMobileCity[] newArray =
              new MoMobileCity[i + arrayLength];
          if (i != 0) {
            System.arraycopy(this.listMobileCity, 0, newArray, 0, i);
          }
          for (; i < newArray.length - 1; i++) {
            newArray[i] = new MoMobileCity();
            input.readMessage(newArray[i]);
            input.readTag();
          }
          // Last one without readTag.
          newArray[i] = new MoMobileCity();
          input.readMessage(newArray[i]);
          this.listMobileCity = newArray;
          break;
        }
        case 24: {
          this.oftenCity = input.readInt32();
          break;
        }
      }
    }
  }

  public static MoMobileCityGroup parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return mergeFrom(new MoMobileCityGroup(), data);
  }

  public static MoMobileCityGroup parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new MoMobileCityGroup().mergeFrom(input);
  }
}
