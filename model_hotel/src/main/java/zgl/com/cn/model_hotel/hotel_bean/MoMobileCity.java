// Generated by the protocol buffer compiler.  DO NOT EDIT!

package zgl.com.cn.model_hotel.hotel_bean;

import zgl.com.cn.libandroid.net.network.bean.ParcelableMessageNano;
import zgl.com.cn.libandroid.net.network.bean.ParcelableMessageNanoCreator;

@SuppressWarnings("hiding")
public final class MoMobileCity extends
        ParcelableMessageNano {

  // Used by Parcelable
  @SuppressWarnings({"unused"})
  public static final android.os.Parcelable.Creator<MoMobileCity> CREATOR =
      new ParcelableMessageNanoCreator<
                MoMobileCity>(MoMobileCity.class);

  private static volatile MoMobileCity[] _emptyArray;
  public static MoMobileCity[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new MoMobileCity[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional int32 DivideID = 1 [default = 0];
  public int divideID;

  // optional int32 CityID = 2 [default = 0];
  public int cityID;

  // optional string CityName = 3;
  public String cityName;

  // optional string CityJianPin = 4;
  public String cityJianPin;

  // optional string CityPinYin = 5;
  public String cityPinYin;

  public MoMobileCity() {
    clear();
  }

  public MoMobileCity clear() {
    divideID = 0;
    cityID = 0;
    cityName = "";
    cityJianPin = "";
    cityPinYin = "";
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.divideID != 0) {
      output.writeInt32(1, this.divideID);
    }
    if (this.cityID != 0) {
      output.writeInt32(2, this.cityID);
    }
    if (!this.cityName.equals("")) {
      output.writeString(3, this.cityName);
    }
    if (!this.cityJianPin.equals("")) {
      output.writeString(4, this.cityJianPin);
    }
    if (!this.cityPinYin.equals("")) {
      output.writeString(5, this.cityPinYin);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.divideID != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.divideID);
    }
    if (this.cityID != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.cityID);
    }
    if (!this.cityName.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.cityName);
    }
    if (!this.cityJianPin.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(4, this.cityJianPin);
    }
    if (!this.cityPinYin.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(5, this.cityPinYin);
    }
    return size;
  }

  @Override
  public MoMobileCity mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          this.divideID = input.readInt32();
          break;
        }
        case 16: {
          this.cityID = input.readInt32();
          break;
        }
        case 26: {
          this.cityName = input.readString();
          break;
        }
        case 34: {
          this.cityJianPin = input.readString();
          break;
        }
        case 42: {
          this.cityPinYin = input.readString();
          break;
        }
      }
    }
  }

  public static MoMobileCity parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return mergeFrom(new MoMobileCity(), data);
  }

  public static MoMobileCity parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new MoMobileCity().mergeFrom(input);
  }
}
